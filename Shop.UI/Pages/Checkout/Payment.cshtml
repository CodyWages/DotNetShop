@page
@model Shop.UI.Pages.Checkout.PaymentModel
@{
}

<h2>Payment</h2>

<div>
    <form id="payment-form" method="post">
        <label for="payment-element">Credit or Debit Card</label>
        <div id="payment-element">
            <!--Stripe.js injects the Payment Element-->
        </div>
        <button id="submit">
            <div class="spinner hidden" id="spinner"></div>
            <span id="button-text">Pay now</span>
        <button>
        <div id="payment-message" class="hidden"></div>
    </form>
</div>

@section scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>

        // Set your publishable key: remember to change this to your live publishable key in production
        // See your keys here: https://dashboard.stripe.com/apikeys
        const stripe = Stripe('@Model.PublicKey');

        // Set up Stripe.js and Elements to use in checkout form
        const elements = stripe.elements();

        const paymentElementOptions = {
            theme: "night"
            layout: "tabs",
        };

        const paymentElement = elements.create("payment", paymentElementOptions);
        paymentElement.mount("#payment-form");

        const form = document.getElementById('payment-form');

        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            const { error } = await stripe.confirmPayment({
                //`Elements` instance that was used to create the Payment Element
                elements,
                confirmParams: {
                    return_url: 'https://example.com/order/123/complete',
                },
            });

            if (error) {
                // This point will only be reached if there is an immediate error when
                // confirming the payment. Show error to your customer (for example, payment
                // details incomplete)
                const messageContainer = document.querySelector('#error-message');
                messageContainer.textContent = error.message;
            } else {
                // Your customer will be redirected to your `return_url`. For some payment
                // methods like iDEAL, your customer will be redirected to an intermediate
                // site first to authorize the payment, then redirected to the `return_url`.
            }
        });
    </script>
}